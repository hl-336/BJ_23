day01
1、自动化测试类型有哪些？能解决一些什么样的问题？

    自动化测试分为：单元测试、接口自动化、UI自动化
    可以解决：回归测试、压力测试、兼容性测试，用于提高工作效率，提升产品质量

2、某电商平台web系统基础版本耗时3个月已上线，现已进入产品版本迭代过程中，平均每周会发布一些新的功能以及少量历史优化类容。在不考虑当前人力资源的情况下，该项目是否适合做web自动化测试并简单说明分析过程？

    适合。因为更新迭代频率较高，需要做回归测试；再加上现在已经上线，页面基本固定，变化不会太大，
    所以适合做web自动化测试

3、元素定位练习题：
# 注册流程
# 1)打开TPSHOP商城进入注册页面，暂停3s；
# 2)完成注册流程；
# 3)元素定位方式不限；
# element.click()#点击事件
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get('http://127.0.0.1/Home/user/reg.html')
time.sleep(3)
driver.find_element_by_id("username").send_keys("13800080008")
driver.find_element_by_name("verify_code").send_keys("8888")
driver.find_element_by_id("password").send_keys("123456")
driver.find_element_by_id("password2").send_keys("123456")
driver.find_element_by_class_name("regbtn").click()
driver.quit()

# 登录练习：
# 1)打开TPSHOP商城进入登录界面
# 2)使用注册练习注册成功的用户信息登录TPSHOP
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://127.0.0.1/Home/User/login.html")
driver.find_element_by_id("username").send_keys("13800080008")
driver.find_element_by_id("password").send_keys("123456")
driver.find_element_by_id("verify_code").send_keys("8888")
time.sleep(2)
driver.find_element_by_name("sbtbutton").click()
driver.quit()
*********************************************************************************************************
day02
一、基础题
选择题
1.[多选]:针对标签定位下面说法正确的是:ABCD

    <body>
        <input type="text" class="inp fmobile J_cellphone" name="invite">
        <input class="inp fsecpass J_password2" id="password2" name="password2" >
    </body>

- A.使用driver.find_element_by_tag_name("input")可以定位第一个input元素；
- B.使用driver.find_element_by_xpath("//input")可以定位第一个input元素；
- C.不建议使用标签定位，因为一般情况下每个标签在页面中存在多个的可能性较大；
- D.页面上所有的元素都有标签名。

2.[多选]:对于下面的元素，能成功定位a标签的表达式有哪些？ABCDEF

    <body>
        <div class="item-left">
    		<h3 class="cata-nav-name">
    			<div class="cata-nav-wrap">
    				<i class="ico ico-nav-1"></i>
    				<a href="/Home/Goods/goodsList/id/2.html" title="家用电器">家用电器</a>
    			</div>
    		</h3>
    	</div>
    </body>

- A.driver.find_element_by_link_text("家用电器")；
- B.driver.find_element_by_partial_link_text("电器")
- C.driver.find_element_by_tag_name("a")
- D.driver.find_element_by_xpath("//a")
- E.driver.find_element_by_xpath("//div/a")
- F.driver.find_element_by_xpath("//*[@title='家用电器']")
- G.driver.find_element_by_xpath("//*[text()='家用']")

3.[多选]:对于xpath下面说法正确的是？BCD

- A.xpath是一种标记语言，可以用于在html中进行元素查找；
- B.xpath可以使用标签内的任意元素来进行定位；
- C.xpath可以基本解决所有元素定位的问题；
- D.xpath定位方式将整个页面的所有元素进行扫描以定位我们所需要的元素，如果脚本中大量使用xpath做元素定位的话， 脚本的执行速度可能会稍慢。

4.[多选]:定位下面<input>的元素，xpath路径定位策略表达式正确是？ABC

    <body>
        <div id='testA'>
        	<input type="text" class="inp fmobile J_cellphone" name="invite" id="password">
        </div>
    </body>

- A.//body/div/input
- B.//input
- C./div//input
- D.//input[1]

5.[多选]:定位<a>标签待付款，对于xpath属性定位表达式正确的是：ABCD

    <div class="navitems2 p" id="navitems5">
        <ul>
            <li>
                <a href="order_list.html" value="全部订单" class="selected">全部订单</a>
            </li>
            <li>
                <a href="WAITPAY.html" value="待付款" class="">待付款</a>
            </li>
            <li>
                <a href="WAITSEND.html" value="待发货" class="">待发货</a>
            </li>
        <ul>
    </div>

- A.//a[@value='待付款']
- B.//*[@value='待付款']
- C.//a[@href='WAITPAY.html']
- D.//*[@value='待付款' and @href='WAITPAY.html']

6.[多选]:定位<a>全部订单付款，对于xpath属性层级表达式正确的是：C

    <div class="navitems2 p" id="navitems5">
        <ul class="tb1">
            <li id="table1">
                <a href="order_list.html" value="全部订单" class="selected">全部订单</a>
            </li>
        <ul>
    </div>

- A. //ul/li/a
- B.//li/a
- C.//li[@id='table1']/a
- D.//ul[@class='tb1']/a[1]

7.[多选]定位下面html中所有input标签，使用方法正确的是：BD

    <div>
        <div>
            <input id="username" name="username" value="all" class="usrA">请输入用户名</input>
        </div>
        </div id="demoA">
        	<input id="password" name="password" value="all" class="pwdA">请输入密码</input>
    	</div>
    	</div id="demoA">
        	<input id="phone" name="phone" value="all" class="phone">请输入电话号码</input>
    	</div>
    </div>

- A.driver.find_element_tag_name("input")
- B.driver.find_elements_by_tag_name("input")
- C.driver.find_elements_by_input("input")
- D.driver.find_elements_by_xpath("//input")
代码题
# 打开浏览器后先窗口最大化
# 1.使用xpath定位定位tpshop首页登陆超链接，并执行点击
# 2.使用id定位定位登陆页面用户名输入框，输入用户名
# 3.使用name定位定位登陆页面密码输入框，输入密码
# 4.使用class定位定位登陆页面验证码输入框，输入验证码
# 5.使用xpath定位登陆按钮执行点击
# 6.打印登陆后页面标题和地址信息
import time
from selenium import webdriver

n = 0
list_data = []
driver = webdriver.Chrome()
driver.get("http://127.0.0.1/")
driver.maximize_window()
driver.find_element_by_xpath('//a[@class="red"]').click()
driver.find_element_by_id('username').send_keys("15766212618")
driver.find_element_by_name('password').send_keys("123456")
driver.find_elements_by_class_name("text_cmu")[2].send_keys("8888")
driver.find_element_by_xpath('//a[@name="sbtbutton"]').click()
print(driver.title)
print(driver.current_url)
time.sleep(8)
# (记得窗口最大化)
# 1.登录成功后(要做个强制等待,因为登录跳转比较慢)
# 2.循环打印下面图示相关信息，打印格式如下(要求使用遍历)：
# 	会员折扣  10 折
#     可用积分  100 分
#     账号余额  0.00 元
#     优惠卷    0 张
# 3.在顶部搜索输入框输入搜索条件:小米,点击搜索
# 4.根据已学的类容获取到商品数量
submit = driver.find_elements_by_xpath('//a/span')[1:]
submit_1 = driver.find_elements_by_xpath("//a/em[@class='mu-num']")
submit_2 = driver.find_elements_by_xpath("//a/em[@class='mu-unit']")
list_data1 = []
list_data2 = []
list_data3 = []

for i in submit:
    text_1 = i.get_attribute('textContent')
    list_data1.append(text_1)
for i in submit_1:
    text_2 = i.get_attribute('textContent')
    list_data2.append(text_2)
for i in submit_2:
    text_3 = i.get_attribute('textContent')
    list_data3.append(text_3)

for i in range(4):
    name = list_data1[i]
    num = list_data2[i]
    units = list_data3[i]
    k = {'名字': name, '数字': num, '单位': units}
    list_data.append(k)
for i in list_data:
    print(i.get('名字'), i.get('数字'), i.get('单位'))

driver.find_element_by_xpath("//input[@id='q']").send_keys("小米")
driver.find_element_by_link_text("搜索").click()
num = driver.find_elements_by_xpath('//div[@class="s_xsall"]/div[@class="shop_name2"]/a')

for i in num:
    n += 1
print('搜索小米数量为', n)
time.sleep(3)
driver.quit()
