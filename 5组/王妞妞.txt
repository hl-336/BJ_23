--------------day01----------------------------------------------------
1、自动化测试类型有哪些？能解决一些什么样的问题？
答：UI自动化测试（功能测试/黑河测试）  web端自动化测试  移动端自动化测试  桌面应用自动化测试
接口自动化测试  单元测试

2、某电商平台web系统基础版本耗时3个月已上线，现已进入产品版本迭代过程
中，平均每周会发布一些新的功能以及少量历史优化类容。在不考虑当前人力资源
的情况下，该项目是否适合做web自动化测试并简单说明分析过程？
答：该项目适合做web自动化。原因如下：
1.系统版本时间较长，有足够的时间去做自动化测试。
2.版本迭代过程中历史内容改动较少，原有功能相对稳定。
3.人力资源不设限，人力充足情况下手工、自动化可分头进行。
3、元素定位练习题：


#注册流程
#1)打开TPSHOP商城进入注册页面，暂停3s；
#2)完成注册流程；
#3)元素定位方式不限； element.click()
#点击事件 12345
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://127.0.0.1/Home/User/reg.html")
time.sleep(3)
driver.find_element_by_id("username").send_keys("19992567805")
time.sleep(3)
driver.find_element_by_name("verify_code").send_keys("8888")
time.sleep(3)
driver.find_element_by_id("password").send_keys("123456")
time.sleep(3)
driver.find_element_by_id("password2").send_keys("123456")
time.sleep(3)
driver.find_element_by_name("invite").send_keys("13088888888")
time.sleep(3)
driver.find_element_by_xpath("//a[@class='regbtn J_btn_agree']").click()
time.sleep(3)
driver.quit()

#登录练习：
#1)打开TPSHOP商城进入登录界面
#2)使用注册练习注册成功的用户信息登录TPSHOP 123
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://127.0.0.1/Home/user/login.html")
time.sleep(3)
driver.find_element_by_name("username").send_keys("13023695598")
time.sleep(3)
driver.find_element_by_name("password").send_keys("123456")
time.sleep(3)
driver.find_element_by_name("verify_code").send_keys("8888")
time.sleep(3)
driver.find_element_by_name("sbtbutton").click()
driver.quit()


-----------day02---------------------------------------------------------
1.abcd
2.abcdef
3.abcd
4.abd
5.abcd
6.c
7.bd
8.代码题
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.maximize_window()
time.sleep(1)
driver.get("http://127.0.0.1/index.php")
time.sleep(1)
driver.find_element_by_xpath("//*[@class='red']").click()
time.sleep(1)
driver.find_element_by_id("username").send_keys("13900000000")
driver.find_element_by_name("password").send_keys("123456")
driver.find_elements_by_class_name("text_cmu")[2].send_keys("8888")
time.sleep(1)
driver.find_element_by_xpath("//a[@class='J-login-submit']").click()
# driver.find_element_by_class_name("J-login-submit").click()
print("页面标题为:", driver.title)
print("地址信息为:", driver.current_url)
time.sleep(3)
driver.quit()

9.
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.maximize_window()
time.sleep(3)
driver.get("http://127.0.0.1/index.php")
time.sleep(3)
driver.find_element_by_xpath("//*[@class='red']").click()
time.sleep(3)
driver.find_element_by_id("username").send_keys("13900000000")
driver.find_element_by_name("password").send_keys("123456")
driver.find_elements_by_class_name("text_cmu")[2].send_keys("8888")
driver.find_element_by_xpath("//a[@class='J-login-submit']").click()
time.sleep(5)
# driver.find_element_by_xpath("//input").send_keys("小米")
# driver.find_element_by_xpath("//a[@class='search_usercenter_btn']").click()
# time.sleep(3)
title_element = driver.find_elements_by_xpath("//div[@class='mu-afte fl']/ul/li/a/span")
data_element = driver.find_elements_by_xpath("//*[@class='mu-num']")
unit_element = driver.find_elements_by_xpath("//*[@class='mu-unit']")


for i in range(len(title_element)):
    print(title_element[i].text, data_element[i].text, unit_element[i].text)

time.sleep(3)
driver.quit()

------------day03--------------------------------------------------
1.ab
2.abc
3.b
4.abcd
5.ac
6.ABC
7.bd
8.答案:
1.导报 ActionChains   2. 创建鼠标对象
3.下达操作指令 鼠标悬停  4.执行操作
9.代码题
import time
from selenium import webdriver
from selenium.webdriver import ActionChains

driver = webdriver.Chrome()
driver.maximize_window()
time.sleep(3)
# 1.打开tpshop,设置窗口最大化和隐式等待
driver.get("http://127.0.0.1/index.php")
# 2.登陆tpshop网站
driver.find_element_by_class_name("red").click()
driver.find_element_by_id("username").send_keys("13900000000")
driver.find_element_by_name("password").send_keys("123456")
driver.find_elements_by_class_name("text_cmu")[2].send_keys("8888")
driver.find_element_by_xpath("//a[@class='J-login-submit']").click()
time.sleep(5)
# 3.在会员首页点击返回商城首页
driver.find_element_by_xpath("//*[text()='首页']").click()
time.sleep(3)
# 4.输入搜索条件小米
driver.find_element_by_id("q").send_keys("小米")
driver.find_element_by_class_name("ecsc-search-button").click()
time.sleep(3)
# 5.点击第一个搜索到商品接口对应加入购物车
driver.find_element_by_class_name("lazy-list").click()
time.sleep(3)
# 6.在商品详情页面点击加入购物车
driver.find_element_by_id("join_cart").click()
time.sleep(2)
# 7.刷新界面
driver.refresh()
time.sleep(3)
# 8.获取界面上购物车的商品总件数和总价,如下图。如购物车没有商品则打印图2中的元素文本信息
cart = driver.find_element_by_id("cart_quantity")
try:
    action = ActionChains(driver)
    action.move_to_element(cart)
    action.perform()
    print("获取到的总件数为：", driver.find_element_by_id("#total_qty").text())
    print("获取到的总价为：", driver.find_element_by_id("#total_qty").text())
except:
    print("购物车为空")
# 9.等待5s,点击去购物车结算
time.sleep(3)
driver.find_element_by_class_name("c-btn").click()
# 10.判断购物车页面商品勾选按钮是否选中
driver.find_element_by_name("checkItem").is_selected()
# 11.打印出商品单价、购买价、数量、小计金额
print("获取商品的单价为：", driver.find_element_by_xpath("//*[contains(@id, 'goods_price')]").text)
print("获取商品的购买价为：", driver.find_element_by_xpath("//*[contains(@id, 'member_goods_price')]").text)
print("获取商品的数量为：", driver.find_element_by_xpath("//*[contains(@id, 'changeQuantity')]").text)
print("获取商品的小计为：", driver.find_element_by_xpath("//*[contains(@id, 'market_price')]").text)
time.sleep(3)
# 12.写个判断:判断单价信息是否大于5000块 如大于则打印"黑店,不买了",并删除购物车的该商品,
price_mi = driver.find_element_by_xpath("//*[contains(@id, 'goods_price')]").text
single_price = ''.join(filter(str.isdigit, price_mi))
single_price = int(single_price)
if single_price > 5000:
    print("黑电，不买了")
    driver.find_element_by_id("removeGoods").click()
# 关闭浏览器 如小于,则打印"勉勉强强,用吧！不过暂时没钱"，关闭浏览器
else:
    print("勉勉强强,用吧！不过暂时没钱")
driver.quit()

--------------------------------------------------------------
