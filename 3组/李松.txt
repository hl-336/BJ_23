day01Homework

    1、自动化测试类型有哪些？能解决一些什么样的问题？
    答：
        自动化测试类型：
            1：web自动化
            2：移动自动化
            3：桌面应用自动化
            4：接口自动化
            5：单元自动化
        能解决的问题：
            提高效率：
                1：回归测试
                2：压力测试
                3：兼容性测试

    2、某电商平台web系统基础版本耗时3个月已上线，现已进入产品版本迭代过程中，
      平均每周会发布一些新的功能以及少量历史优化类容。在不考虑当前人力资源的情况下，
      该项目是否适合做web自动化测试并简单说明分析过程？
    答：适合使用web自动化。
        原因如下：
            1、该项目是个电商项目，是一个长期存在的项目；
            2、基础版本已上线，基于用户和市场的情况，需求不会发生频繁的变动；
            3、平均每周会发布一些新的功能以及少量历史优化类容，存在大量回归测试，使用自动化技术可以避免
              大量的重复性劳动，提高效率，减少因人员失误而造成的损失。

    3-1、元素定位练习题：
      #注册流程
      #1)打开TPSHOP商城进入注册页面，暂停3s；
      #2)完成注册流程；
      #3)元素定位方式不限；
      element.click()#点击事件
      答：代码实现如下
            import time
            from selenium import webdriver

            #  创建浏览器对象
            driver = webdriver.Chrome()
            # 打开浏览器
            driver.get('http://tpshop-test.itheima.net/Home/user/reg.html')
            # 暂停3s
            time.sleep(3)
            # 实现业务--id定位--输入姓名
            driver.find_element_by_id('username').send_keys('13833345678')
            # 实现业务--class定位--输入验证码
            driver.find_element_by_class_name('J_imgcode').send_keys('8888')
            # 实现业务--id定位--输入密码
            driver.find_element_by_id('password').send_keys('123456')
            # 实现业务--id定位--确认密码
            driver.find_element_by_id('password2').send_keys('123456')
            # 实现业务--xpath定位--输入推荐人
            driver.find_element_by_xpath('//*[@placeholder="请输入手机号码" and @name="invite"]').send_keys('13800000002')
            # 实现业务--xpath定位--我已阅读并同意《TPshop网服务协议》
            driver.find_element_by_xpath('//*[@type="checkbox" and @class="iyes fn-fl J_protocal"]').click()
            # 实现业务--xpath定位--同意协议并注册
            driver.find_element_by_xpath('//*[@class="regbtn J_btn_agree" and'
                                         ' @href="javascript:void(0);"]').click()
            # 关闭浏览器
            driver.quit()


    3-2、元素定位练习题：
      #登录练习：
      #1)打开TPSHOP商城进入登录界面
      #2)使用注册练习注册成功的用户信息登录TPSHOP
    答：代码实现如下：
        import time
        from selenium import webdriver

        #  创建浏览器对象
        driver = webdriver.Chrome()
        # 打开浏览器
        driver.get('http://tpshop-test.itheima.net/Home/user/login.html')

        # 实现业务--id定位--输入姓名
        driver.find_element_by_id('username').send_keys('13833345678')
        # 实现业务--id定位--输入密码
        driver.find_element_by_id('password').send_keys('123456')
        # 实现业务--id定位--输入密码
        driver.find_element_by_id('verify_code').send_keys('8888')
        # 实现业务--xpath定位--登录
        driver.find_element_by_xpath('//*[@href="javascript:void(0);" and'
                                     ' @onclick="checkSubmit();"]').click()
        # 暂停7s
        time.sleep(7)
        # 关闭浏览器
        driver.quit()
        再版
        三版
        最终不变版


day02Homework

    1、ABCD
    2、ABCDEF
    3、ABCD
    4、ABD
    5、ABCD
    6、ABC
    7、BD
    8、代码实现如下：
        # 导包
        from selenium import webdriver

        # 定义浏览器驱动
        driver = webdriver.Chrome()
        # 打开浏览器后先窗口最大化
        driver.get('http://tpshop-test.itheima.net')
        driver.maximize_window()
        # 使用XPath定位点击登录
        driver.find_element_by_xpath('//*[@href="/Home/user/login.html"]').click()
        # 使用id定位用户名输入框并输入用户名
        driver.find_element_by_id("username").send_keys('13833345678')
        # 使用name定位定位登陆页面密码输入框，输入密码
        driver.find_element_by_name("password").send_keys('123456')
        # 使用class定位定位登陆页面验证码输入框，输入验证码
        driver.find_elements_by_class_name("text_cmu")[2].send_keys('8888')
        # 使用xpath定位登陆按钮执行点击
        driver.find_element_by_xpath('//*[@onclick="checkSubmit();" '
                                     'and @class="J-login-submit"]').click()
        # 打印登陆后页面标题和地址信息
        print(driver.title)
        print(driver.current_url)
        # 关闭浏览器
        driver.close()


    9、BD
    10、
        # 导包
        import time
        from selenium import webdriver
        import re

        # 先完成登录及窗口最大化
        driver = webdriver.Chrome()
        driver.get('http://localhost/')
        driver.maximize_window()
        driver.find_element_by_xpath('//*[@href="/Home/user/login.html"]').click()
        driver.find_element_by_id("username").send_keys('13833345678')
        driver.find_element_by_name("password").send_keys('123456')
        driver.find_elements_by_class_name("text_cmu")[2].send_keys('8888')
        driver.find_element_by_xpath('//*[@onclick="checkSubmit();"]').click()
        # 登录成功后(要做个强制等待,因为登录跳转比较慢)
        time.sleep(10)
        # 循环打印下面图示相关信息，打印格式如下(要求使用遍历)：
        # 	会员折扣  10 折
        #   可用积分  100 分
        #   账号余额  0.00 元
        #   优惠卷    0 张
        # list4 = ['会员折扣  10 折', '可用积分  100 分', '账号余额  0.00 元', '优惠卷    0 张']
        # for i in list4:
        #     print(i)
        for i in driver.find_element_by_xpath('//*[@class="mu-a1"]/li[1]').text:
            print(i, end='')
        for i in driver.find_element_by_xpath('//*[@class="mu-a1"]/li[2]').text:
            print(i, end='')
        for i in driver.find_element_by_xpath('//*[@class="mu-a2"]/li[1]').text:
            print(i, end='')
        for i in driver.find_element_by_xpath('//*[@class="mu-a2"]/li[2]').text:
            print(i, end='')
        # a2 = driver.find_element_by_xpath('//*[@class="mu-a1"]/li/a/*[@class="mu-num"]').text
        # a3 = driver.find_element_by_xpath('//*[@class="mu-a1"]/li/a/*[@class="mu-unit"]').text
        # print(a1 + '    ' + a2 + ' ' + a3)
        # # 在顶部搜索输入框输入搜索条件:小米,点击搜索
        driver.find_element_by_class_name('search_usercenter_text').send_keys('小米')
        driver.find_element_by_class_name('search_usercenter_btn').click()
        list_img = driver.find_elements_by_xpath('//*[@class="s_xsall"]')
        print('\n', '搜索到的小米手机个数为：', len(list_img))


dar03Homework
    1、ABC
    2、ABC
    3、B
    4、ACD
    5、BD
    6、ABC
    7、AD
    8、
    答：
        假设各依赖包皆已导入
        driver = webdriver.Chorm()
        action = ActionChtains(driver)
        action.move_to_element(driver.find_element_by_id('testA'))
    9、代码实现如下：
        # 导包
        import time
        from selenium import webdriver
        from selenium.webdriver import ActionChains
        from selenium.webdriver.common.by import By
        from selenium.webdriver.common.keys import Keys

        # 1.打开tpshop,设置窗口最大化和隐式等待
        driver = webdriver.Chrome()
        driver.maximize_window()
        driver.implicitly_wait(10)
        # 2.登陆tpshop网站
        driver.get('http://tpshop-test.itheima.net')
        driver.find_element_by_css_selector('.red').click()
        driver.find_element(By.ID, 'username').send_keys('13833345678')
        driver.find_element(By.CSS_SELECTOR, '[type="password"]').send_keys('123456')
        driver.find_element(By.NAME, 'verify_code').send_keys('8888')
        driver.find_element_by_xpath('//*[contains(@href, "script:v")]').click()
        # 3.在会员首页点击返回商城首页
        driver.find_element(By.XPATH, '//*[text()="返回商城首页"]').click()
        # 4.输入搜索条件小米
        driver.find_element(By.XPATH, '//*[starts-with(@placeholder, "请输入")]').clear()
        driver.find_element(By.XPATH, '//*[starts-with(@placeholder, "请输入")]').send_keys('小米')
        driver.find_element_by_css_selector('.ecsc-search-button').click()
        # 5.点击第一个搜索到商品接口对应加入购物车
        driver.find_element_by_xpath('//*[text()="加入购物车"]').click()
        # 6.在商品详情页面点击加入购物车
        action = ActionChains(driver)
        action.move_to_element(driver.find_element_by_id('number')).double_click().perform()
        driver.find_element_by_id('number').send_keys(Keys.BACK_SPACE)
        driver.find_element_by_id('number').send_keys('2')
        driver.find_element_by_xpath('//*[contains(@onclick, "AjaxAddCart")]').click()
        # 7.刷新界面
        driver.refresh()
        # 8.获取界面上购物车的商品总件数和总价,如下图。如购物车没有商品则打印图2中的元素文本信息
        action = ActionChains(driver)
        time.sleep(3)
        action.move_to_element(driver.find_element_by_css_selector('.c-n')).perform()
        time.sleep(3)
        try:
            total_items = driver.find_element_by_id('total_qty').text
            total_pay = driver.find_element_by_id('total_pay').text
        except Exception as result:
            print('错误类型为：', result)
            print('亲，购物车中没有商品哟~')
        else:
            print(f'购物车的商品总件数为:{total_items}件')
            print(f'购物车的商品总价为：{total_pay}元')
        finally:
            # 9.等待5s,点击去购物车结算
            time.sleep(5)
            driver.find_element_by_class_name('c-btn').click()
            # 10.判断购物车页面商品勾选按钮是否选中
            change = driver.find_element_by_css_selector('[name="checkItem"]')
            if change.is_enabled():
                # 11.打印出商品单价、购买价、数量、小计金额
                print('单价为：', driver.find_element_by_id('cart_90_goods_price').text, '元')
                print('购买价为', driver.find_element(By.ID, 'cart_90_member_goods_price').text, '元')
                print('数量为', driver.find_element_by_id('changeQuantity_90').get_attribute('value'))
                print('小计金额', driver.find_element_by_id('cart_90_market_price').text)
            else:
                change.click()
            # 12.写个判断:判断单价信息是否大于5000块
            #         如大于则打印"黑店,不买了",并删除购物车的该商品,关闭浏览器
            #         如小于,则打印"勉勉强强,用吧！不过暂时没钱"，关闭浏览器
            if float(driver.find_element_by_id('cart_90_goods_price').text[1:]) >= 5000:
                print('黑店,不买了')
                driver.quit()
            else:
                print('勉勉强强,用吧！不过暂时没钱')
                driver.quit()




