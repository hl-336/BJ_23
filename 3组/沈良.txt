1、自动化测试类型有哪些？能解决一些什么样的问题？
UI
web端自动化测试
移动端自动化测试
桌面应用自动化测试
解决问题：1.回归测试 对于历史版本功能的测试
                    对于缺陷修复的测试
         2.压力测试 模拟多个用户去验证系统服务器是否能满足要求的过程
         3.兼容性测试 pc端： 浏览器兼容
                            系统兼容
                            分辨率兼容
                     移动端：  系统
                              品牌
                              分辨率
                     软件版本兼容： 小程序依托于微信客户端的版本
                                   系统软件的版本兼容

2、某电商平台web系统基础版本耗时3个月已上线，现已进入产品版本迭代过程
中，平均每周会发布一些新的功能以及少量历史优化类容。在不考虑当前人力资源
的情况下，该项目是否适合做web自动化测试并简单说明分析过程？

答：不适合，因为每周都会发布新功能,编写代码工作量大更耗时，所以不适合做自动化测试



元素定位练习题：
1.注册流程
import time
from selenium import webdriver

driver = webdriver.Chrome()

driver.get("http://127.0.0.1/Home/user/reg.html")

driver.find_element_by_id("username").send_keys("17610096013")
time.sleep(2)
driver.find_element_by_name("verify_code").send_keys("8888")
time.sleep(2)
driver.find_element_by_id("password").send_keys("123456")
time.sleep(2)
driver.find_element_by_id("password2").send_keys("123456")
time.sleep(2)
driver.find_element_by_name("invite").send_keys("13001148238")
time.sleep(2)
driver.find_element_by_xpath("//p[@class='fn-fl checktxt']/input")
time.sleep(2)
driver.find_element_by_xpath("//*[@onclick='check_submit();']").click()
time.sleep(2)

driver.quit()

2.登陆练习

import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://127.0.0.1/Home/user/login.html")

driver.find_element_by_name("username").send_keys("17610096013")
time.sleep(1)
driver.find_element_by_name("password").send_keys("123456")
time.sleep(1)
driver.find_element_by_name("verify_code").send_keys("8888")
time.sleep(1)
driver.find_element_by_xpath("//*[@href='javascript:void(0);']").click()
time.sleep(13)


driver.quit()
