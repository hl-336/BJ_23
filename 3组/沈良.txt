1、自动化测试类型有哪些？能解决一些什么样的问题？
UI
web端自动化测试
移动端自动化测试
桌面应用自动化测试
解决问题：1.回归测试 对于历史版本功能的测试
                    对于缺陷修复的测试
         2.压力测试 模拟多个用户去验证系统服务器是否能满足要求的过程
         3.兼容性测试 pc端： 浏览器兼容
                            系统兼容
                            分辨率兼容
                     移动端：  系统
                              品牌
                              分辨率
                     软件版本兼容： 小程序依托于微信客户端的版本
                                   系统软件的版本兼容

2、某电商平台web系统基础版本耗时3个月已上线，现已进入产品版本迭代过程
中，平均每周会发布一些新的功能以及少量历史优化类容。在不考虑当前人力资源
的情况下，该项目是否适合做web自动化测试并简单说明分析过程？

答：不适合，因为每周都会发布新功能,编写代码工作量大更耗时，所以不适合做自动化测试



元素定位练习题：
1.注册流程
import time
from selenium import webdriver

driver = webdriver.Chrome()

driver.get("http://127.0.0.1/Home/user/reg.html")

driver.find_element_by_id("username").send_keys("17610096013")
time.sleep(2)
driver.find_element_by_name("verify_code").send_keys("8888")
time.sleep(2)
driver.find_element_by_id("password").send_keys("123456")
time.sleep(2)
driver.find_element_by_id("password2").send_keys("123456")
time.sleep(2)
driver.find_element_by_name("invite").send_keys("13001148238")
time.sleep(2)
driver.find_element_by_xpath("//p[@class='fn-fl checktxt']/input")
time.sleep(2)
driver.find_element_by_xpath("//*[@onclick='check_submit();']").click()
time.sleep(2)

driver.quit()

2.登陆练习

import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://127.0.0.1/Home/user/login.html")

driver.find_element_by_name("username").send_keys("17610096013")
time.sleep(1)
driver.find_element_by_name("password").send_keys("123456")
time.sleep(1)
driver.find_element_by_name("verify_code").send_keys("8888")
time.sleep(1)
driver.find_element_by_xpath("//*[@href='javascript:void(0);']").click()
time.sleep(12)


driver.quit()





Day2作业


1.[多选]:针对标签定位下面说法正确的是:
A B C
2.[多选]:对于下面的元素，能成功定位a标签的表达式有哪些？
A B  C E F
3.[多选]:对于xpath下面说法正确的是？
A B D
4.[多选]:定位下面<input>的元素，xpath路径定位策略表达式正确是？
A
5.[多选]:定位<a>标签待付款，对于xpath属性定位表达式正确的是：
A B C D
6.[多选]:定位<a>全部订单付款，对于xpath属性层级表达式正确的是：
A  B C
7.[多选]定位下面html中所有input标签，使用方法正确的是：
B D

代码题
答：
import time
from selenium import webdriver

driver = webdriver.Chrome()

driver.get("http://127.0.0.1")
driver.maximize_window()
driver.find_element_by_link_text("登录").click()
time.sleep(3)
driver.find_element_by_id("username").send_keys("17610026018")
time.sleep(3)
driver.find_element_by_name("password").send_keys("123456")
time.sleep(3)
driver.find_element_by_xpath("//*[@class='text_cmu' and @name='verify_code']").send_keys('8888')
time.sleep(3)
driver.find_element_by_xpath("//a[@class='J-login-submit']").click()
print('登录后的标题:', driver.title)
print('登录后的地址信息:', driver.current_url)



day03作业
选择题
1.[多选]通过自动化脚本获取元素信息的目的有哪些？
    A B C
2.[多选]以下获取元素信息的常用方法说法正确的是？
    A B C D
3.下面哪个为实例化鼠标操作的方法？
    B
4.[多选]下面常用鼠标操作方法和说明正确匹配的是
    A B C
5.[多选]元素对象send_keys方法用途包含:
    B D
6.[多选]关于元素等待下面说法错误的是:
    A B C
7.[多选]关于隐式等待下面说法错误的是:
    A B C D

简答题

1.如何实现输入悬停到下面所描述元素对象上？
action.move_to_element(driver.find_element_by_id("testA")).perform()


代码题
import time
from selenium import webdriver
from selenium.webdriver import ActionChains

driver = webdriver.Chrome()
action = ActionChains(driver)
driver.get("http://127.0.0.1")
driver.maximize_window()
driver.implicitly_wait(10)
driver.find_element_by_link_text("登录").click()
time.sleep(2)

driver.find_element_by_xpath("//*[@id='username']").send_keys("17610026018")
time.sleep(1)

driver.find_element_by_xpath("//*[@id='password']").send_keys("123456")
time.sleep(1)

driver.find_element_by_xpath("//*[@id='verify_code']").send_keys("8888")
time.sleep(1)

driver.find_element_by_css_selector("[name*='sb']").click()
time.sleep(2)

driver.find_element_by_link_text("返回商城首页").click()
time.sleep(2)

driver.find_element_by_css_selector("[placeholder*='关键字']").send_keys("小米")
time.sleep(2)

driver.find_element_by_xpath("//*[@class='ecsc-search-button']").click()
time.sleep(2)
driver.find_element_by_css_selector("[onclick^='AjaxAddCart(104']").click()
time.sleep(2)
driver.find_element_by_css_selector("[data-original$='104_236_236.jpeg']").click()
time.sleep(2)
driver.find_element_by_css_selector("[onclick$='(104,1);']").click()
time.sleep(2)
driver.refresh()
time.sleep(12)
action.move_to_element(driver.find_element_by_xpath("//*[@class='c-n fl']")).perform()
time.sleep(10)
print("购物车商品总件数", driver.find_element_by_id("total_qty").text)
print("购物车商品总价钱", driver.find_element_by_id("total_pay").text)
time.sleep(5)
driver.find_element_by_link_text("去购物车结算 >>").click()
time.sleep(2)
print("购物车商品是否勾选：", driver.find_element_by_xpath("//input[@value='6']").is_enabled())
time.sleep(1)
print("商品单价为：", driver.find_element_by_id("cart_6_goods_price").text)
print("商品购买价为：", driver.find_element_by_id("cart_6_member_goods_price").text)
print("商品购数量为：", driver.find_element_by_id("changeQuantity_6").get_attribute("value"))
print("商品购小计为：", driver.find_element_by_id("cart_6_market_price").text)
price = driver.find_element_by_id("cart_6_goods_price").text

if float(price[1:10]) > 5000:
    print("黑店不买了")
else:
    print("勉勉强强,用吧！不过暂时没钱")