day01
--------------------------------------
1、自动化测试类型有哪些？能解决一些什么样的问题？
1.1自动化测试类型：UI自动化测试（web端自动化测试，移动端自动化测试），接口测试，单元测试
1.2、a.回归测试：版本功能的验证；
     b.压力测试：模拟多个用户验证服务器性能能否满足要求；
     c.兼容性测试：1）、PC端：主要是操作系统、浏览器以及分辨率；2）、移动端：分辨率、系统（安卓，ios），软件版本；
     d.提供测试效率，提高产品质量；
2、某电商平台web系统基础版本耗时3个月已上线，现已进入产品版本迭代过程中，平均每周会发布一些新的功能以及少量历史优化类容。
在不考虑当前人力资源的情况下，该项目是否适合做web自动化测试并简单说明分析过程？
答：该项目不适合做web自动化测试，原因如下：
    a、项目周期较短，小于6个月；b、需求更新过快
3、元素定位练习题：

"""
1)打开TPSHOP商城进入注册页面，暂停3s；
2)完成注册流程
"""

# 导包
import time
from selenium import webdriver
# 创建浏览器驱动对象
driver = webdriver.Chrome()
# 打开浏览器,输入网址
driver.get("http://tpshop-test.itheima.net/Home/user/reg.html")
# 业务操作
# 输入手机号码
driver.find_element_by_class_name("J_cellphone").send_keys("13844649478")
# 图像验证码
driver.find_element_by_class_name("J_imgcode").send_keys("8888")
# 设置密码
driver.find_element_by_class_name("J_password").send_keys("123456")
# 确认密码
driver.find_element_by_class_name("fsecpass").send_keys("123456")
time.sleep(3)
# 点击按钮
element = driver.find_element_by_class_name("J_btn_agree")
element.click()
time.sleep(3)
# 关闭浏览器
driver.quit()
"""
2)使用注册练习注册成功的用户信息登录TPSHOP
"""
# 导包
import time
from selenium import webdriver
# 创建浏览器驱动对象
driver = webdriver.Chrome()
# 输入网址
driver.get("http://tpshop-test.itheima.net/Home/user/login.html")
# 操作业务
# 输入手机号
driver.find_element_by_id("username").send_keys("18593739748")
# 输入密码
driver.find_element_by_name("password").send_keys("123456")
# 输入验证码
driver.find_element_by_id("verify_code").send_keys("8888")
driver.find_element_by_class_name("J-login-submit").click()
time.sleep(3)
# 关闭浏览器
driver.quit()
------------------------------------------------------------------------------------------
day02
------------------------------------------------------------------------------------------
一、
1.ABCD
2.ABCDEF
3.ABCD
4.ABD
5.ABCD
6.C
7.BD
2.代码题
# 导包
import time
from selenium import webdriver
driver = webdriver.Chrome() # 创建浏览器驱动对象
driver.get("http://tpshop-test.itheima.net/Home/user/login.html") # 打开网址
# 操作业务
driver.maximize_window() # 打开浏览器后先窗口最大化
driver.find_element_by_id("username").send_keys("13844649477")
# 3.使用name定位定位登陆页面密码输入框，输入密码
driver.find_element_by_name("password").send_keys("123456")
# 4.使用class定位定位登陆页面验证码输入框，输入验证码
driver.find_element_by_xpath('//*[@class="text_cmu" and @id="verify_code"]').send_keys("8888")
# 5.使用xpath定位登陆按钮执行点击
driver.find_element_by_xpath('//*[@class="J-login-submit"]').click()
# 6.打印登陆后页面标题和地址信息
print("打印页面标题", driver.title)
print("地址信息", driver.current_url)
time.sleep(5)
# 关闭
driver.quit()
-----------------------------------------------------------------------------------------
day03
-----------------------------------------------------------------------------------------
一、选择题
1.ABC
2.ABC
3.B
4.ACD
5.ACD
6.ABC
7.ABCD
简答题
如何实现输入悬停到下面所描述元素对象上？**
<div id='testA' name='testA'/
步骤：
from selenium.webdriver import ActionChains
action = ActionChains(driver)
action.move_to_element(driver.find_element_by_css_selector('#testA')).perform()
二、代码题
# 导包
import time
from selenium import webdriver
from selenium.webdriver import ActionChains
# 创建浏览器驱动对象
driver = webdriver.Chrome()
action = ActionChains(driver)
# 打开网址
driver.get("http://localhost/index.php/Home/User/index.html")
# 1.打开tpshop,设置窗口最大化和隐式等待
driver.maximize_window()
driver.implicitly_wait(10)
# 2.登陆tpshop网站
driver.find_element_by_id("username").send_keys("13844649477")
driver.find_element_by_id('password').send_keys("123456")
driver.find_element_by_id('verify_code').send_keys("8888")
driver.find_element_by_name("sbtbutton").click()
# 3.在会员首页点击返回商城首页
driver.find_element_by_xpath('//div[@class="m-navitems"]/ul/li/a').click()
# 4.输入搜索条件小米
driver.find_element_by_id('q').send_keys("小米")
driver.find_element_by_class_name("ecsc-search-button").click()
# 5.点击第一个搜索到商品接口对应加入购物车
driver.find_element_by_link_text("加入购物车").click()
# 6.在商品详情页面点击加入购物车
driver.find_element_by_id("join_cart").click()
# 7.刷新界面
driver.refresh()
# 8.获取界面上购物车的商品总件数和总价,如下图。如购物车没有商品则打印图2中的元素文本信息
try:
    # 悬停
    action.move_to_element(driver.find_element_by_css_selector(".c-n"))
    action.perform()
    time.sleep(3)
    # 获取
    print("获取商品数量", driver.find_element_by_id('total_qty').text)
    print("获取价格", driver.find_element_by_id('total_pay').text)
except:
    print("亲，购物车中没有商品呦~")
# 9.等待5s,点击去购物车结算
time.sleep(5)
driver.find_element_by_css_selector(".c-btn").click()
# 10.判断购物车页面商品勾选按钮是否选中
print("判断按钮是否勾选：True", driver.find_element_by_css_selector(".check-box").is_selected())
# 11.打印出商品单价、购买价、数量、小计金额
print("商品单价:", driver.find_element_by_id("cart_15_goods_price").text)
print("购买价:", driver.find_element_by_id("cart_15_member_goods_price").text)
print("数量:", driver.find_element_by_css_selector('[class="wi43 fl"]').text)
print("小计金额:", driver.find_element_by_id("cart_15_market_price").text)
# 12.写个判断:判断单价信息是否大于5000块
# 	如大于则打印"黑店,不买了",并删除购物车的该商品,关闭浏览器
# 	如小于,则打印"勉勉强强,用吧！不过暂时没钱"，关闭浏览器
money = driver.find_element_by_id("cart_15_member_goods_price").text
if money > str(5000):
    print("黑店,不买了")
    driver.find_element_by_css_selector('[class="gwc-gb deleteGoods"]').click()
    driver.quit()
else:
    print("勉勉强强,用吧！不过暂时没钱")
    driver.quit()
