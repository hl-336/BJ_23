"""第一天"""

# 1、自动化测试类型有哪些？能解决一些什么样的问题

UI自动化测试(web端自动化测试 移动端自动化测试,桌面应用自动化测试,
接口自动化测试
单元测试

# 2、某电商平台web系统基础版本耗时3个月已上线，现已进入产品版本迭代过程 中，平均每周会发布一些新的功能以及少量历史优化类容。在不考虑当前人力资源 的情况下，该项目是否适合做web自动化测试并简单说明分析过程

答;合适

# 3#注册流程 #1)打开TPSHOP商城进入注册页面，暂停3s； #2)完成注册流程； #3)元素定位方式不限； element.click()#点击事件

import time

from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://tpshop-test.itheima.net/Home/user/reg.html")
time.sleep(3)
driver.find_element_by_id("username").send_keys("18133737680")
driver.find_element_by_id("password").send_keys("123456")
driver.find_element_by_id("password2").send_keys("123456")
driver.find_element_by_name("verify_code").send_keys("8888")
driver.find_element_by_class_name("regbtn").click()
time.sleep(3)
driver.close()

# 4,登录练习： #1)打开TPSHOP商城进入登录界面 #2)使用注册练习注册成功的用户信息登录TPSHOP

import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://tpshop-test.itheima.net/Home/User/login.html")
time.sleep(3)
driver.find_element_by_id("username").send_keys("18033727684")
driver.find_element_by_id("password").send_keys("123456")
driver.find_element_by_id("verify_code").send_keys("8888")
driver.find_element_by_name("sbtbutton").click()
time.sleep(3)
driver.close()

"""第二天"""

一,基础题
# 1. A,B,C,D        √
# 2. A,B,C,D,E,F    √
# 3. B,C,D          A也是正确选项
# 4. A,B,D          √
# 5. A,B,C,D        √
# 6. A,B,C          √如果题目是xpath表示正确问题则答案正确,题目要求是属性层级的话应该只有C
# 7. A,B,D          A错误,题目要求是找到所有的input标签
# 代码题1
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://localhost/")
time.sleep(3)
driver.find_element_by_xpath('//div[@class="fl nologin"]/a[@class="red"]').click()
time.sleep(3)
driver.find_element_by_id('username').send_keys('18033727684')
driver.find_element_by_name('password').send_keys('123456')
driver.find_elements_by_class_name('text_cmu')[2].send_keys('8888')
driver.find_element_by_xpath('//a[@class="J-login-submit"]').click()
time.sleep(10)
print("标题为", driver.title)
print("地址信息为", driver.current_url)
driver.close()
------
注意:一般在完成测试后不要用close去关闭浏览器,这种关闭方法不会关闭浏览器进程,会占用系统资源

二.提高题
# 1[不清]. B,D        √
# 2.



"""第五天""
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get("http://ttmp.research.itcast.cn/#/login")
time.sleep(3)
driver.find_element_by_xpath("//input").send_keys(13911111111)
driver.find_element_by_xpath('//input[@placeholder="验证码"]').send_keys(246810)
driver.find_element_by_class_name("el-button--primary").click()
driver.maximize_window()
time.sleep(10)
list1 = driver.find_elements_by_xpath('//div[@class="num"]')
list2 = driver.find_elements_by_xpath('//div[@class="text"]')
for i in range(3):
    print(list1[i].text, list2[i].text)
driver.close()
import time

import pytest
from parameterized import parameterized
from selenium import webdriver
from selenium.webdriver import ActionChains


class TestTPshop:
    def setup_class(self):
        # 实例化浏览器
        self.driver = webdriver.Chrome()
        # 最大化窗口和隐形等待
        self.driver.maximize_window()
        self.driver.implicitly_wait(10)
        # 进入首页
        self.driver.get("http://tpshop-test.itheima.net/")

    def teardown_class(self):
        # 关闭浏览器
        self.driver.quit()

    @pytest.mark.run(order=1)
    def test01_login(self):
        """登录用例一"""
        # 点击登录
        self.driver.find_element_by_class_name('red').click()
        # 进行登录
        self.driver.find_element_by_id('username').send_keys('18033727684')
        self.driver.find_element_by_id('password').send_keys('123456')
        self.driver.find_element_by_id('verify_code').send_keys('8888')
        self.driver.find_element_by_class_name('J-login-submit').click()
        time.sleep(3)

    data = [("铁锤1", 636, 1291, 1329, "天", 18033727684, 1),
            ("铁锤2", 636, 1291, 1329, "地", 123456, 2)]

    @parameterized.expand(data)
    @pytest.mark.run(order=2)
    def test02_address(self, a, b, c, d, e, f, g):
        """地址用例二"""
        # 返回首页

        self.driver.get("http://tpshop-test.itheima.net/")
        # 点击我的订单
        self.driver.find_element_by_css_selector('.fr a').click()
        # 窗口切换至我的订单,并关闭首页窗口
        self.driver.close()
        handles = self.driver.window_handles
        self.driver.switch_to.window(handles[-1])
        # 点击收货地址
        action = ActionChains(self.driver)
        action.move_to_element(self.driver.find_element_by_css_selector('.u-dt span')).perform()
        self.driver.find_element_by_link_text('收货地址').click()
        # 点击添加新地址
        self.driver.find_element_by_class_name('co_blue').click()

        # 切换frame
        self.driver.switch_to.frame(self.driver.find_element_by_id('layui-layer-iframe100001'))

        # 输入收货人
        self.driver.find_element_by_css_selector("[name = 'consignee']").send_keys(a)

        # 选择河北,邯郸,峰峰矿区,后边的哪个默认有数,不管
        self.driver.find_element_by_css_selector(f'select [value="{b}"]').click()

        self.driver.find_element_by_css_selector(f'[value="{c}"]').click()
        self.driver.find_element_by_css_selector(f'[value="{d}"]').click()
        # 输入详细地址
        self.driver.find_element_by_id('address').send_keys(e)
        self.driver.find_element_by_class_name('wi40-BFB').send_keys(f)
        self.driver.find_element_by_css_selector('.box-ok span').click()
        if g == 2:
            self.driver.switch_to.alert.accept()
            self.driver.refresh()
        self.driver.switch_to.default_content()
        js_str = "window.scrollTo(0,200)"
        self.driver.execute_script(js_str)
        numb = int(len(self.driver.find_elements_by_css_selector('li[class="sx2"]')))
        print(numb)
        self.driver.get_screenshot_as_file("./scrm/zzh.jpg")
if __name__ == "__main__":
    pytest.main(["-s --html=report/report.html","text02.py"])
