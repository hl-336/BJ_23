day01-9月15日
1、自动化测试类型有哪些？能解决一些什么样的问题？
  回归测试：对于历史版本功能的验证、对于缺陷修复之后的验证
  压力测试：模拟多个用户去验证系统服务器是否能满足要求的过程
  兼容性测试：PC端（浏览器兼容、系统兼容、分辨率）、手机端（系统、分辨率、品牌、软件版本兼容（小程序依托于微信客户端的版本、
  系统软件的版本兼容））
  提高测试效率、提升产品质量
2、某电商平台web系统基础版本耗时3个月已上线，现已进入产品版本迭代过程中，平均每周会发布一些新的功能以及少量历史优化内容。在不考虑当前人力资源的情况下，该项目是否适合做web自动化测试并简单说明分析过程？
  不适合，UI自动化测试的前提是需求变动不频繁、项目周期长、项目需要回归测试
  从题中可得出该项目需求变动过于频繁、项目周期短以及平均每周发布一些新的功能以及少量历史优化内容，不适合进行UI自动化测试
3、元素定位练习题：
  注册：
    import time
    from selenium import webdriver

    driver = webdriver.Chrome()
    driver.get('http://localhost/Home/user/reg.html')
    time.sleep(3)
    driver.find_element_by_name('username').send_keys('13133091235')
    driver.find_element_by_name('verify_code').send_keys('8888')
    driver.find_element_by_name('password').send_keys('123456')
    driver.find_element_by_name('password2').send_keys('123456')
    driver.find_element_by_name('invite').send_keys('13133091234')
    time.sleep(3)
    driver.find_element_by_class_name('regbtn').click()
    time.sleep(30)
    driver.quit()
  登录：
    import time
    from selenium import webdriver

    driver = webdriver.Chrome()
    driver.get('http://localhost/Home/User/login.html')
    time.sleep(3)
    driver.find_element_by_name('username').send_keys('13133091235')
    driver.find_element_by_name('password').send_keys('123456')
    driver.find_element_by_name('verify_code').send_keys('8888')
    time.sleep(3)
    driver.find_element_by_name('sbtbutton').click()
    time.sleep(30)
    driver.quit()

day02-9月16日
一、基础题
选择题
1.ABCD
2.ABCDEF
3.ABCD
4.ABD
5.ABCD
6.C
7.BD
代码题
1.按以下要求完成登陆流程：
import time
from selenium import webdriver

driver = webdriver.Chrome()
driver.get('http://localhost/')
time.sleep(3)
driver.maximize_window()
driver.find_element_by_xpath('//*[@class="fl nologin"]/a[1]').click()
driver.find_element_by_id('username').send_keys('13133091234')
driver.find_element_by_name('password').send_keys('123456')
driver.find_element_by_id('verify_code').send_keys('8888')
driver.find_element_by_xpath('//*[@class="login_bnt"]/a').click()
print(driver.title)
print(driver.current_url)
time.sleep(10)
title_ele = driver.find_elements_by_xpath('//div[@class="mu-afte fl"]/ul/li/a/span')
data_ele = driver.find_elements_by_xpath('//em[@class="mu-num"]')
unit_ele = driver.find_elements_by_xpath('//em[@class="mu-unit"]')
for i in range(len(title_ele)):
    print(title_ele[i].text, data_ele[i].text, unit_ele[i].text)
driver.quit()

day03-9月17日
一、基础题
1.AB
2.ABC
3.B
4.ABD
5.D
6.D
7.A
简答题
from seleniun import webdriver
from selenium.webdriver import ActionsChains
driver = webdriver.Chrome()
action = ActionsChains(driver)
action.move_to_element(driver.find_element_by_id('testA'))
acton.perform()
driver.quit()
二、代码题
import time

from selenium import webdriver
from selenium.webdriver import ActionChains
from selenium.webdriver.common.by import By

driver = webdriver.Chrome()
driver.get('http://localhost/')
driver.maximize_window()
driver.implicitly_wait(10)
driver.find_element(By.LINK_TEXT, '登录').click()
driver.find_element(By.ID, 'username').send_keys('13133091234')
driver.find_element(By.ID, 'password').send_keys('123456')
driver.find_element(By.ID, 'verify_code').send_keys('8888')
driver.find_element(By.NAME, 'sbtbutton').click()
driver.find_element(By.CLASS_NAME, 'home').click()
driver.find_element(By.ID, 'q').send_keys('小米')
driver.find_element(By.CLASS_NAME, 'ecsc-search-button').click()
driver.find_element(By.CSS_SELECTOR, '.p-btn a').click()
driver.find_element(By.ID, 'join_cart').click()
driver.refresh()
s_car = driver.find_element(By.CSS_SELECTOR, '.c-n span')
try:
    action = ActionChains(driver)
    action.move_to_element(s_car)
    action.perform()
    print(driver.find_element(By.ID, 'total_qty').text)
    print(driver.find_element(By.ID, 'total_pay').text)
except:
    print('亲，购物车中没有商品呦~')
time.sleep(5)
driver.find_element(By.CLASS_NAME, 'c-btn').click()
driver.find_element(By.NAME, 'checkItem').is_selected()
print(driver.find_element(By.ID, 'cart_18_goods_price').text)
print(driver.find_element(By.ID, 'cart_18_member_goods_price').text)
print(driver.find_element(By.ID, 'changeQuantity_18').text)
print(driver.find_element(By.ID, 'cart_18_market_price').text)
price = driver.find_element(By.ID, 'cart_18_goods_price').text
if price > str(5000):
    print('黑店，不买了')
    driver.find_element(By.CLASS_NAME, 'gwc-gb').click()
else:
    print('勉勉强强,用吧！不过暂时没钱')
driver.quit()